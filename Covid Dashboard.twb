<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDashboard_17553751270760' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.06bm4zw0izownn193zsrw1hdreiw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0ravisj0foyhcv151jj2u1q5qu3a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hruti/OneDrive/Desktop/python/SQL/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ravisj0foyhcv151jj2u1q5qu3a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BBD2ABE20963451CA4718A51EABB544D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BBD2ABE20963451CA4718A51EABB544D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_BBD2ABE20963451CA4718A51EABB544D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BBD2ABE20963451CA4718A51EABB544D]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hruti/AppData/Local/Temp/TableauTemp/#TableauTemp_1cvaogd0todhay18abhot0ubj1zz.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2025 05:20:26 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BBD2ABE20963451CA4718A51EABB544D'>
            <properties context=''>
              <relation connection='excel-direct.0ravisj0foyhcv151jj2u1q5qu3a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1jlicqs1wavj4u18pe3d71ozghcn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1em63m712djb6x13l9dlv0dcj02j'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hruti/OneDrive/Desktop/python/SQL/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1em63m712djb6x13l9dlv0dcj02j' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hruti/AppData/Local/Temp/TableauTemp/#TableauTemp_1kq6jzd128w78j14zi8gr1al7umg.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2025 05:21:17 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_ADA00ED2BA57495893DB64B6C05FE5A8'>
            <properties context=''>
              <relation connection='excel-direct.1em63m712djb6x13l9dlv0dcj02j' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1v1a54m0vwsil61bg4th71tc58p9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1ph7lni0kdmvku1avcjz20r3pvz8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hruti/OneDrive/Desktop/python/SQL/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ph7lni0kdmvku1avcjz20r3pvz8' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_29635FD633C5459297AEA36735A5D100]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_29635FD633C5459297AEA36735A5D100]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_29635FD633C5459297AEA36735A5D100]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hruti/AppData/Local/Temp/TableauTemp/#TableauTemp_10xmrsx1qedoaa1czgolb1a0wnih.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2025 05:21:04 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_29635FD633C5459297AEA36735A5D100'>
            <properties context=''>
              <relation connection='excel-direct.1ph7lni0kdmvku1avcjz20r3pvz8' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.1z00zn81or3zfq1g6n7mw046a0l8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.1uow0e00n84xxv108rme10vd8ubs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hruti/OneDrive/Desktop/python/SQL/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1uow0e00n84xxv108rme10vd8ubs' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hruti/AppData/Local/Temp/TableauTemp/#TableauTemp_0u97ous0x2p58a1butbe603qtz7g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/16/2025 05:21:36 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_523B0D8BD3A34F29852D5FFED7B84C76]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Africa&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Africa&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_523B0D8BD3A34F29852D5FFED7B84C76'>
            <properties context=''>
              <relation connection='excel-direct.1uow0e00n84xxv108rme10vd8ubs' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.06bm4zw0izownn193zsrw1hdreiw' />
          </datasources>
          <datasource-dependencies datasource='federated.06bm4zw0izownn193zsrw1hdreiw'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]' value='221' />
            <format attr='height' value='57' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.06bm4zw0izownn193zsrw1hdreiw].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.06bm4zw0izownn193zsrw1hdreiw].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#1f4b91' />
            <format attr='background-color' scope='rows' value='#898989' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#898989' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#ffffff7c' />
            <format attr='stroke-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.06bm4zw0izownn193zsrw1hdreiw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1104972362518311' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-pattern-only' value='solid' />
                <format attr='stroke-color' value='#f1ce63ad' />
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5470E3F4-7128-42D1-96FF-1C06A69DB41E}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1v1a54m0vwsil61bg4th71tc58p9' />
          </datasources>
          <datasource-dependencies datasource='federated.1v1a54m0vwsil61bg4th71tc58p9'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]' value='110' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v1a54m0vwsil61bg4th71tc58p9].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{146C377D-0D7D-478F-8093-990EF1CAC103}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1jlicqs1wavj4u18pe3d71ozghcn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jlicqs1wavj4u18pe3d71ozghcn'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[Longitude (generated)]' field-type='quantitative' max='17919813.292871106' min='-1440612.3329135375' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[Latitude (generated)]' field-type='quantitative' max='8998919.9441860653' min='-885516.93813012191' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' value='73' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[none:Location:nk]' />
              <color column='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jlicqs1wavj4u18pe3d71ozghcn].[Latitude (generated)]</rows>
        <cols>[federated.1jlicqs1wavj4u18pe3d71ozghcn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{26E8AEB0-6C7B-4767-B91A-8A922DC86B3A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.1z00zn81or3zfq1g6n7mw046a0l8' />
          </datasources>
          <datasource-dependencies datasource='federated.1z00zn81or3zfq1g6n7mw046a0l8'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]' />
              <text column='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]' />
              <text column='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[fVal:avg:PercentPopulationInfected:qk]' />
              <color column='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{80924259-B08B-46A2-9A9F-43D125DC6904}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='9' param='horz' type-v2='layout-flow' w='99006' x='497' y='929'>
            <zone h='98142' id='7' type-v2='layout-basic' w='89379' x='497' y='929'>
              <zone h='15796' id='3' name='Sheet 1' w='44689' x='497' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33275' id='5' name='Sheet 2' w='44689' x='497' y='16725'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='6' name='Sheet 3' w='44690' x='45186' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='11' name='Sheet 4' w='79565' x='497' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]&#10;[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]' type-v2='color' w='9814' x='80062' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='155' h='98142' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9627' x='89876' y='929'>
              <zone fixed-size='110' h='13705' id='10' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9627' x='89876' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='23' param='vert' type-v2='layout-flow' w='99006' x='497' y='929'>
                <zone fixed-size='119' h='15796' id='3' is-fixed='true' name='Sheet 1' w='44689' x='497' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='6' is-fixed='true' name='Sheet 3' w='44690' x='45186' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='13705' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9627' x='89876' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='33275' id='5' is-fixed='true' name='Sheet 2' w='44689' x='497' y='16725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='11' is-fixed='true' name='Sheet 4' w='79565' x='497' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49071' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]&#10;[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]' type-v2='color' w='9814' x='80062' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3A709B2C-E959-44B2-A47D-377CF30F7098}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='152'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06bm4zw0izownn193zsrw1hdreiw].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1507408C-5DEC-45A1-9CDD-75F7F8A08044}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15812D74-0D58-4DEA-BEE2-ADD1A9A4FF6D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jlicqs1wavj4u18pe3d71ozghcn].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jlicqs1wavj4u18pe3d71ozghcn].[none:Location:nk]</field>
            <field>[federated.1v1a54m0vwsil61bg4th71tc58p9].[attr:location:nk]</field>
            <field>[federated.1v1a54m0vwsil61bg4th71tc58p9].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{426F11A2-C103-41A4-9DCB-B464F195F1F2}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]&#10;[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]</field>
            <field>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]</field>
            <field>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3504039A-D26A-4EC4-876B-FBB9CB9D9E91}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Forecast Indicator:nk]</field>
              <field>[federated.1z00zn81or3zfq1g6n7mw046a0l8].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{34AE56D5-88F7-4D7C-A227-EA515B1D5AE8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      F9upnXeky/8P9elKpLQfq7wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='63' name='Sheet 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      nhVQjAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
